import { IAutoBounds, IResizeEventListener, ISizeData, IScreenSizeData } from '@leafer/interface';
import { LeaferCanvasBase } from '@leafer/core';

declare class LeaferCanvas extends LeaferCanvasBase {
    view: HTMLCanvasElement;
    parentView: HTMLElement;
    set zIndex(zIndex: number);
    set childIndex(index: number);
    protected resizeObserver: ResizeObserver;
    protected autoBounds: IAutoBounds;
    protected resizeListener: IResizeEventListener;
    init(): void;
    set backgroundColor(color: string);
    get backgroundColor(): string;
    set hittable(hittable: boolean);
    get hittable(): boolean;
    protected __createView(): void;
    protected __createViewFrom(inputView: string | object): void;
    protected setAbsolute(view: HTMLCanvasElement): void;
    updateViewSize(): void;
    updateClientBounds(): void;
    startAutoLayout(autoBounds: IAutoBounds, listener: IResizeEventListener): void;
    protected imitateResizeObserver(): void;
    protected checkAutoBounds(parentSize: ISizeData): void;
    stopAutoLayout(): void;
    protected emitResize(size: IScreenSizeData): void;
    unrealCanvas(): void;
    destroy(): void;
}

export { LeaferCanvas };
