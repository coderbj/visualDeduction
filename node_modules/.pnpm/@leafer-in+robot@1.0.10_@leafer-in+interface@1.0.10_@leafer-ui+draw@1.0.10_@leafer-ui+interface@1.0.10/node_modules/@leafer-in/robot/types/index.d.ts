import { IRobot, IRobotComputedKeyframe, IRobotData, IRobotKeyframe, IRobotActions, IRobotActionName, IRobotInputData, ILeaferImage, ILeaferCanvas, IRenderOptions } from '@leafer-ui/interface';
import { UI, UIData } from '@leafer-ui/draw';

declare class Robot extends UI implements IRobot {
    get __tag(): string;
    running: boolean;
    get nowFrame(): IRobotComputedKeyframe;
    robotFrames?: IRobotComputedKeyframe[];
    __: IRobotData;
    robot?: IRobotKeyframe | IRobotKeyframe[];
    actions?: IRobotActions;
    action?: IRobotActionName;
    now?: number;
    FPS?: number;
    loop?: boolean;
    protected __timer: any;
    constructor(data?: IRobotInputData);
    play(): void;
    pause(): void;
    stop(): void;
    __updateRobot(): void;
    __updateAction(): void;
    protected __loadRobot(frame: IRobotKeyframe, start: number, end: number): void;
    protected __createFrames(image: ILeaferImage, frame: IRobotKeyframe, start: number, end: number): void;
    protected __runAction(start: number, end: number): void;
    protected __updateRobotBounds(): void;
    __drawContent(canvas: ILeaferCanvas, _options: IRenderOptions): void;
    destroy(): void;
}

declare class RobotData extends UIData {
    get __drawAfterFill(): boolean;
    protected _robot: IRobotKeyframe | IRobotKeyframe[];
    protected _action: IRobotActionName;
    protected setRobot(value: IRobotKeyframe | IRobotKeyframe[]): void;
    protected setAction(value: IRobotActionName): void;
}

export { Robot, RobotData };
