{
  "version": 3,
  "sources": ["../../.pnpm/@leafer-in+state@1.0.10_@leafer-in+interface@1.0.10_@leafer-ui+core@1.0.10_@leafer-ui+interface@1.0.10/node_modules/@leafer-in/state/dist/state.esm.js"],
  "sourcesContent": ["import { decorateLeafAttr, attr, State } from '@leafer-ui/draw';\nimport { MathHelper, State as State$1, isNull, PointerEvent, UI, dataType } from '@leafer-ui/core';\n\nfunction stateType(defaultValue, styleName) {\n    return decorateLeafAttr(defaultValue, (key) => attr({\n        set(value) {\n            this.__setAttr(key, value);\n            this.waitLeafer(() => styleName ? State.setStyleName(this, styleName, value) : State.set(this, value));\n        }\n    }));\n}\nfunction stateStyleType(defaultValue) {\n    return decorateLeafAttr(defaultValue, (key) => attr({\n        set(value) {\n            this.__setAttr(key, value);\n            this.__layout.stateStyleChanged = true;\n        }\n    }));\n}\n\nfunction findParentButton(leaf, button) {\n    if (button && button !== true)\n        return button;\n    if (!leaf.button) {\n        let { parent } = leaf;\n        for (let i = 0; i < 2; i++) {\n            if (parent) {\n                if (parent.button)\n                    return parent;\n                parent = parent.parent;\n            }\n        }\n    }\n    return null;\n}\n\nfunction setStyle(leaf, style) {\n    if (typeof style !== 'object')\n        style = undefined;\n    updateStyle(leaf, style, 'in');\n}\nfunction unsetStyle(leaf, style) {\n    const { normalStyle } = leaf;\n    if (typeof style !== 'object')\n        style = undefined;\n    if (normalStyle) {\n        if (!style)\n            style = normalStyle;\n        updateStyle(leaf, style, 'out');\n    }\n}\nconst emprtyStyle = {};\nfunction updateStyle(leaf, style, type) {\n    const { normalStyle } = leaf;\n    if (!style)\n        style = emprtyStyle;\n    if (style.scale) {\n        MathHelper.assignScale(style, style.scale);\n        delete style.scale;\n    }\n    if (style === emprtyStyle || !State$1.canAnimate)\n        type = null;\n    let transition = type ? getTransition(type, style, leaf) : false;\n    const fromStyle = transition ? getFromStyle(leaf, style) : undefined;\n    leaf.killAnimate('transition');\n    if (normalStyle)\n        leaf.set(normalStyle, true);\n    const statesStyle = getStyle(leaf);\n    if (statesStyle) {\n        const { animation } = statesStyle;\n        if (animation) {\n            const animate = leaf.animate(animation, undefined, 'animation', true);\n            Object.assign(statesStyle, animate.endingStyle);\n            if (type !== 'in' || style.animation !== animation)\n                animate.kill();\n            else\n                transition = false;\n            delete statesStyle.animation;\n        }\n        leaf.normalStyle = filterStyle(statesStyle, leaf);\n        leaf.set(statesStyle, true);\n    }\n    else {\n        leaf.normalStyle = undefined;\n    }\n    if (transition) {\n        const toStyle = filterStyle(fromStyle, leaf);\n        leaf.set(fromStyle, true);\n        leaf.animate([fromStyle, toStyle], transition, 'transition', true);\n    }\n    leaf.__layout.stateStyleChanged = false;\n}\nfunction getStyle(leaf) {\n    let exist;\n    const style = {}, { state } = leaf, button = findParentButton(leaf);\n    const stateStyle = state && leaf.states[state];\n    if (stateStyle && State$1.isState(state, leaf, button))\n        exist = assign(style, stateStyle);\n    const selectedStyle = style.selectedStyle || leaf.selectedStyle;\n    if (selectedStyle && State$1.isSelected(leaf, button))\n        exist = assign(style, selectedStyle);\n    if (State$1.isDisabled(leaf, button)) {\n        const disabledStyle = style.disabledStyle || leaf.disabledStyle;\n        if (disabledStyle)\n            exist = assign(style, disabledStyle);\n    }\n    else {\n        const focusStyle = style.focusStyle || leaf.focusStyle;\n        if (focusStyle && State$1.isFocus(leaf, button))\n            exist = assign(style, focusStyle);\n        const hoverStyle = style.hoverStyle || leaf.hoverStyle;\n        if (hoverStyle && State$1.isHover(leaf, button))\n            exist = assign(style, hoverStyle);\n        const pressStyle = style.pressStyle || leaf.pressStyle;\n        if (pressStyle && State$1.isPress(leaf, button))\n            exist = assign(style, pressStyle);\n    }\n    return exist ? style : undefined;\n}\nfunction filterStyle(style, data, addStyle, useAnimateExcludes) {\n    const to = addStyle ? style : {}, forStyle = addStyle || style;\n    for (let key in forStyle) {\n        if (useAnimateExcludes) {\n            if (!State$1.animateExcludes[key])\n                to[key] = data[key];\n        }\n        else\n            to[key] = data[key];\n    }\n    return to;\n}\nfunction filterAnimateStyle(style, data, addStyle) {\n    return filterStyle(style, data, addStyle, true);\n}\nfunction getFromStyle(leaf, style) {\n    const fromStyle = filterAnimateStyle(style, leaf), animate = leaf.animate();\n    if (animate)\n        filterAnimateStyle(fromStyle, leaf, animate.fromStyle);\n    return fromStyle;\n}\nfunction getTransition(type, style, data) {\n    let name = type === 'in' ? 'transition' : 'transitionOut';\n    if (type === 'out' && isNull(data[name]) && isNull(style[name]))\n        name = 'transition';\n    return isNull(style[name]) ? data[name] : style[name];\n}\nfunction assign(style, stateStyle) {\n    Object.assign(style, stateStyle);\n    return true;\n}\n\nfunction setPointerState(leaf, stateName) {\n    const style = leaf[stateName];\n    if (style)\n        setStyle(leaf, style);\n    if (leaf.button)\n        setChildrenState(leaf.children, stateName);\n}\nfunction setState(leaf, stateName, stateStyle) {\n    if (!stateStyle)\n        stateStyle = leaf.states[stateName];\n    setStyle(leaf, stateStyle);\n    if (leaf.button)\n        setChildrenState(leaf.children, null, stateName);\n}\nfunction setChildrenState(children, stateType, state) {\n    if (!children)\n        return;\n    let leaf, update;\n    for (let i = 0, len = children.length; i < len; i++) {\n        leaf = children[i];\n        if (stateType) {\n            update = true;\n            switch (stateType) {\n                case 'hoverStyle':\n                    if (State$1.isHover(leaf))\n                        update = false;\n                    break;\n                case 'pressStyle':\n                    if (State$1.isPress(leaf))\n                        update = false;\n                    break;\n                case 'focusStyle':\n                    if (State$1.isFocus(leaf))\n                        update = false;\n            }\n            if (update)\n                setPointerState(leaf, stateType);\n        }\n        else if (state)\n            setState(leaf, state);\n        if (leaf.isBranch)\n            setChildrenState(leaf.children, stateType, state);\n    }\n}\n\nfunction unsetPointerState(leaf, stateName) {\n    const style = leaf[stateName];\n    if (style)\n        unsetStyle(leaf, style);\n    if (leaf.button)\n        unsetChildrenState(leaf.children, stateName);\n}\nfunction unsetState(leaf, stateName, stateStyle) {\n    unsetStyle(leaf, stateStyle);\n    if (leaf.button)\n        unsetChildrenState(leaf.children, null, stateName);\n}\nfunction unsetChildrenState(children, stateType, state) {\n    if (!children)\n        return;\n    let leaf;\n    for (let i = 0, len = children.length; i < len; i++) {\n        leaf = children[i];\n        if (stateType)\n            unsetPointerState(leaf, stateType);\n        else if (state)\n            unsetState(leaf, state);\n        if (leaf.isBranch)\n            unsetChildrenState(leaf.children, stateType, state);\n    }\n}\n\nfunction updateEventStyle(leaf, eventType) {\n    switch (eventType) {\n        case PointerEvent.ENTER:\n            setPointerState(leaf, 'hoverStyle');\n            break;\n        case PointerEvent.LEAVE:\n            unsetPointerState(leaf, 'hoverStyle');\n            break;\n        case PointerEvent.DOWN:\n            setPointerState(leaf, 'pressStyle');\n            break;\n        case PointerEvent.UP:\n            unsetPointerState(leaf, 'pressStyle');\n            break;\n    }\n}\n\nfunction checkPointerState(fnName, leaf, button) {\n    let find;\n    const interaction = leaf.leafer ? leaf.leafer.interaction : null;\n    if (interaction) {\n        find = interaction[fnName](leaf);\n        if (!find && button) {\n            const parentButton = findParentButton(leaf, button);\n            if (parentButton)\n                find = interaction[fnName](parentButton);\n        }\n    }\n    return find;\n}\nfunction checkFixedState(attrName, leaf, button) {\n    let find = leaf[attrName];\n    if (!find && button) {\n        const parentButton = findParentButton(leaf, button);\n        if (parentButton)\n            find = parentButton[attrName];\n    }\n    return find;\n}\nfunction checkState(stateName, leaf, button) {\n    let find = leaf.states[stateName];\n    if (!find && button) {\n        const parentButton = findParentButton(leaf, button);\n        if (parentButton)\n            find = parentButton.states[stateName];\n    }\n    return !!find;\n}\n\nState$1.animateExcludes = {\n    animation: 1,\n    animationOut: 1,\n    transition: 1,\n    transitionOut: 1,\n    states: 1,\n    state: 1,\n    normalStyle: 1,\n    hoverStyle: 1,\n    pressStyle: 1,\n    focusStyle: 1,\n    selectedStyle: 1,\n    disabledStyle: 1\n};\nState$1.isState = function (state, leaf, button) { return checkState(state, leaf, button); };\nState$1.isSelected = function (leaf, button) { return checkFixedState('selected', leaf, button); };\nState$1.isDisabled = function (leaf, button) { return checkFixedState('disabled', leaf, button); };\nState$1.isFocus = function (leaf, button) { return checkPointerState('isFocus', leaf, button); };\nState$1.isHover = function (leaf, button) { return checkPointerState('isHover', leaf, button); };\nState$1.isPress = function (leaf, button) { return checkPointerState('isPress', leaf, button); };\nState$1.isDrag = function (leaf, button) { return checkPointerState('isDrag', leaf, button); };\nState$1.setStyleName = function (leaf, stateType, value) { value ? setState(leaf, stateType, leaf[stateType]) : unsetState(leaf, stateType, leaf[stateType]); };\nState$1.set = function (leaf, stateName) { const style = leaf.states[stateName]; style ? setState(leaf, stateName, style) : unsetState(leaf, stateName, style); };\nState$1.getStyle = getStyle;\nState$1.updateStyle = updateStyle;\nState$1.updateEventStyle = updateEventStyle;\nconst ui = UI.prototype;\nstateType(false, 'selectedStyle')(ui, 'selected');\nstateType(false, 'disabledStyle')(ui, 'disabled');\nstateStyleType({})(ui, 'states');\nstateType('')(ui, 'state');\ndataType()(ui, 'normalStyle');\nstateStyleType()(ui, 'hoverStyle');\nstateStyleType()(ui, 'pressStyle');\nstateStyleType()(ui, 'focusStyle');\nstateStyleType()(ui, 'selectedStyle');\nstateStyleType()(ui, 'disabledStyle');\ndataType(false)(ui, 'button');\nui.focus = function (value = true) {\n    this.waitLeafer(() => {\n        let { focusData } = this.app.interaction;\n        if (value) {\n            if (focusData)\n                focusData.focus(false);\n            focusData = this;\n        }\n        else\n            focusData = null;\n        this.app.interaction.focusData = focusData;\n        value ? setPointerState(this, 'focusStyle') : unsetPointerState(this, 'focusStyle');\n    });\n};\nui.updateState = function () {\n    State$1.updateStyle(this, undefined, 'in');\n};\n\nexport { stateStyleType, stateType };\n"],
  "mappings": "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",
  "names": ["stateType"]
}
