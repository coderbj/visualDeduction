{
  "version": 3,
  "sources": ["../../.pnpm/@leafer-in+editor@1.0.10_@leafer-in+interface@1.0.10_@leafer-in+resize@1.0.10_@leafer-ui+core_yumj2sxned7tuz3srxhhhc3qdi/node_modules/@leafer-in/editor/dist/editor.esm.js"],
  "sourcesContent": ["import { PathCommandMap, MatrixHelper, Direction9, Leaf, Text, Path, Line, Polygon, Group, Box, Event, defineKey, UI, Paint, Rect, Answer, Bounds, LeafList, PointHelper, AroundHelper, MathHelper, Matrix, Debug, PropertyEvent, LeafHelper, DataHelper, RenderEvent, getPointData, Creator, dataType } from '@leafer-ui/draw';\nimport { PointerEvent, DragEvent, MoveEvent, ZoomEvent, RotateEvent, KeyEvent } from '@leafer-ui/core';\n\nconst { M, L, C, Q, Z, N, D, X, G, F, O, P, U } = PathCommandMap;\nconst PathScaler = {\n    scale(data, scaleX, scaleY) {\n        if (!data)\n            return;\n        let command;\n        let i = 0, len = data.length;\n        while (i < len) {\n            command = data[i];\n            switch (command) {\n                case M:\n                case L:\n                    scalePoints(data, scaleX, scaleY, i, 1);\n                    i += 3;\n                    break;\n                case C:\n                    scalePoints(data, scaleX, scaleY, i, 3);\n                    i += 7;\n                    break;\n                case Q:\n                    scalePoints(data, scaleX, scaleY, i, 2);\n                    i += 5;\n                    break;\n                case Z:\n                    i += 1;\n                    break;\n                case N:\n                    scalePoints(data, scaleX, scaleY, i, 2);\n                    i += 5;\n                    break;\n                case D:\n                    scalePoints(data, scaleX, scaleY, i, 2);\n                    i += 9;\n                    break;\n                case X:\n                    scalePoints(data, scaleX, scaleY, i, 2);\n                    i += 6;\n                    break;\n                case G:\n                    scalePoints(data, scaleX, scaleY, i, 2);\n                    i += 9;\n                    break;\n                case F:\n                    scalePoints(data, scaleX, scaleY, i, 2);\n                    i += 5;\n                    break;\n                case O:\n                    data[i] = G;\n                    data.splice(i + 4, 0, data[i + 3], 0);\n                    scalePoints(data, scaleX, scaleY, i, 2);\n                    i += 7 + 2;\n                    len += 2;\n                    break;\n                case P:\n                    data[i] = F;\n                    data.splice(i + 4, 0, data[i + 3]);\n                    scalePoints(data, scaleX, scaleY, i, 2);\n                    i += 4 + 1;\n                    len += 1;\n                    break;\n                case U:\n                    scalePoints(data, scaleX, scaleY, i, 2);\n                    i += 6;\n                    break;\n            }\n        }\n    },\n    scalePoints(data, scaleX, scaleY, start, pointCount) {\n        for (let i = pointCount ? start + 1 : 0, end = pointCount ? i + pointCount * 2 : data.length; i < end; i += 2) {\n            data[i] *= scaleX;\n            data[i + 1] *= scaleY;\n        }\n    }\n};\nconst { scalePoints } = PathScaler;\n\nconst matrix$1 = MatrixHelper.get();\nconst { topLeft: topLeft$1, top: top$1, topRight: topRight$1, right: right$2, bottom: bottom$1, left: left$2 } = Direction9;\nfunction scaleResize(leaf, scaleX, scaleY) {\n    if (leaf.pathInputed) {\n        scaleResizePath(leaf, scaleX, scaleY);\n    }\n    else {\n        if (scaleX !== 1)\n            leaf.width *= scaleX;\n        if (scaleY !== 1)\n            leaf.height *= scaleY;\n    }\n}\nfunction scaleResizeFontSize(leaf, scaleX, scaleY) {\n    const { app } = leaf;\n    const editor = app && app.editor;\n    let fontScale = scaleX;\n    if (editor.editing) {\n        const layout = leaf.__layout;\n        let { width, height } = layout.boxBounds;\n        width *= scaleY - scaleX;\n        height *= scaleX - scaleY;\n        switch (editor.resizeDirection) {\n            case top$1:\n            case bottom$1:\n                fontScale = scaleY;\n                layout.affectScaleOrRotation ? leaf.moveInner(-width / 2, 0) : leaf.x -= width / 2;\n                break;\n            case left$2:\n            case right$2:\n                layout.affectScaleOrRotation ? leaf.moveInner(0, -height / 2) : leaf.y -= height / 2;\n                break;\n            case topLeft$1:\n            case topRight$1:\n                layout.affectScaleOrRotation ? leaf.moveInner(0, -height) : leaf.y -= height;\n                break;\n        }\n    }\n    leaf.fontSize *= fontScale;\n    const data = leaf.__;\n    if (!data.__autoWidth)\n        leaf.width *= fontScale;\n    if (!data.__autoHeight)\n        leaf.height *= fontScale;\n}\nfunction scaleResizePath(leaf, scaleX, scaleY) {\n    PathScaler.scale(leaf.__.path, scaleX, scaleY);\n    leaf.path = leaf.__.path;\n}\nfunction scaleResizePoints(leaf, scaleX, scaleY) {\n    const { points } = leaf;\n    typeof points[0] === 'object' ? points.forEach(p => { p.x *= scaleX, p.y *= scaleY; }) : PathScaler.scalePoints(points, scaleX, scaleY);\n    leaf.points = points;\n}\nfunction scaleResizeGroup(group, scaleX, scaleY) {\n    const { children } = group;\n    for (let i = 0; i < children.length; i++) {\n        matrix$1.a = scaleX;\n        matrix$1.d = scaleY;\n        children[i].transform(matrix$1, true);\n    }\n}\n\nconst leaf = Leaf.prototype;\nleaf.scaleResize = function (scaleX, scaleY = scaleX, noResize) {\n    const data = this;\n    if (noResize || (data.editConfig && data.editConfig.editSize === 'scale')) {\n        data.scaleX *= scaleX;\n        data.scaleY *= scaleY;\n    }\n    else {\n        if (scaleX < 0)\n            data.scaleX *= -1, scaleX = -scaleX;\n        if (scaleY < 0)\n            data.scaleY *= -1, scaleY = -scaleY;\n        this.__scaleResize(scaleX, scaleY);\n    }\n};\nleaf.__scaleResize = function (scaleX, scaleY) {\n    scaleResize(this, scaleX, scaleY);\n};\nleaf.resizeWidth = function (width) {\n    const scale = width / this.getBounds('box', 'local').width;\n    this.scaleOf(this.__layout.boxBounds, scale, this.__.lockRatio ? scale : 1, true);\n};\nleaf.resizeHeight = function (height) {\n    const scale = height / this.getBounds('box', 'local').height;\n    this.scaleOf(this.__layout.boxBounds, this.__.lockRatio ? scale : 1, scale, true);\n};\nText.prototype.__scaleResize = function (scaleX, scaleY) {\n    if (this.__.resizeFontSize || (this.editConfig && this.editConfig.editSize === 'font-size')) {\n        scaleResizeFontSize(this, scaleX, scaleY);\n    }\n    else {\n        scaleResize(this, scaleX, scaleY);\n    }\n};\nPath.prototype.__scaleResize = function (scaleX, scaleY) {\n    scaleResizePath(this, scaleX, scaleY);\n};\nLine.prototype.__scaleResize = function (scaleX, scaleY) {\n    if (this.pathInputed) {\n        scaleResizePath(this, scaleX, scaleY);\n    }\n    else if (this.points) {\n        scaleResizePoints(this, scaleX, scaleY);\n    }\n    else {\n        this.width *= scaleX;\n    }\n};\nPolygon.prototype.__scaleResize = function (scaleX, scaleY) {\n    if (this.pathInputed) {\n        scaleResizePath(this, scaleX, scaleY);\n    }\n    else if (this.points) {\n        scaleResizePoints(this, scaleX, scaleY);\n    }\n    else {\n        scaleResize(this, scaleX, scaleY);\n    }\n};\nGroup.prototype.__scaleResize = function (scaleX, scaleY) {\n    scaleResizeGroup(this, scaleX, scaleY);\n};\nBox.prototype.__scaleResize = function (scaleX, scaleY) {\n    if (this.__.__autoSize && this.children.length) {\n        scaleResizeGroup(this, scaleX, scaleY);\n    }\n    else {\n        scaleResize(this, scaleX, scaleY);\n        if (this.__.resizeChildren)\n            scaleResizeGroup(this, scaleX, scaleY);\n    }\n};\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nfunction toList(value) {\n    return value ? (value instanceof Array ? value : [value]) : [];\n}\nclass EditorEvent extends Event {\n    get list() { return toList(this.value); }\n    get oldList() { return toList(this.oldValue); }\n    constructor(type, data) {\n        super(type);\n        if (data)\n            Object.assign(this, data);\n    }\n}\nEditorEvent.SELECT = 'editor.select';\nEditorEvent.HOVER = 'editor.hover';\n\nclass EditorMoveEvent extends EditorEvent {\n    constructor(type, data) {\n        super(type, data);\n    }\n}\nEditorMoveEvent.MOVE = 'editor.move';\n\nclass EditorScaleEvent extends EditorEvent {\n    constructor(type, data) {\n        super(type, data);\n    }\n}\nEditorScaleEvent.SCALE = 'editor.scale';\n\nclass EditorRotateEvent extends EditorEvent {\n    constructor(type, data) {\n        super(type, data);\n    }\n}\nEditorRotateEvent.ROTATE = 'editor.rotate';\n\nclass EditorSkewEvent extends EditorEvent {\n    constructor(type, data) {\n        super(type, data);\n    }\n}\nEditorSkewEvent.SKEW = 'editor.skew';\n\nfunction targetAttr(fn) {\n    return (target, key) => {\n        const privateKey = '_' + key;\n        defineKey(target, key, {\n            get() { return this[privateKey]; },\n            set(value) {\n                const old = this[privateKey];\n                if (old !== value)\n                    this[privateKey] = value, fn(this, old);\n            }\n        });\n    };\n}\n\nconst matrix = MatrixHelper.get();\nconst { abs } = Math;\nconst { copy: copy$1, scale } = MatrixHelper;\nclass Stroker extends UI {\n    constructor() {\n        super();\n        this.list = [];\n        this.hittable = false;\n        this.strokeAlign = 'center';\n    }\n    setTarget(target, style) {\n        this.set(style);\n        this.target = target;\n    }\n    __draw(canvas, options) {\n        const { list } = this;\n        if (list.length) {\n            let leaf;\n            const data = this.__, { stroke, strokeWidth, fill } = data, { bounds } = options;\n            for (let i = 0; i < list.length; i++) {\n                leaf = list[i];\n                const { worldTransform, worldRenderBounds } = leaf;\n                if (bounds && bounds.hit(worldRenderBounds, options.matrix)) {\n                    const aScaleX = abs(worldTransform.scaleX), aScaleY = abs(worldTransform.scaleY);\n                    if (aScaleX !== aScaleY) {\n                        copy$1(matrix, worldTransform);\n                        scale(matrix, 1 / aScaleX, 1 / aScaleY);\n                        canvas.setWorld(matrix, options.matrix);\n                        canvas.beginPath();\n                        data.strokeWidth = strokeWidth;\n                        const { x, y, width, height } = leaf.__layout.boxBounds;\n                        canvas.rect(x * aScaleX, y * aScaleY, width * aScaleX, height * aScaleY);\n                    }\n                    else {\n                        canvas.setWorld(worldTransform, options.matrix);\n                        canvas.beginPath();\n                        if (leaf.__.__useArrow)\n                            leaf.__drawPath(canvas);\n                        else\n                            leaf.__.__pathForRender ? leaf.__drawRenderPath(canvas) : leaf.__drawPathByBox(canvas);\n                        data.strokeWidth = strokeWidth / abs(worldTransform.scaleX);\n                    }\n                    if (stroke)\n                        typeof stroke === 'string' ? Paint.stroke(stroke, this, canvas) : Paint.strokes(stroke, this, canvas);\n                    if (fill)\n                        typeof fill === 'string' ? Paint.fill(fill, this, canvas) : Paint.fills(fill, this, canvas);\n                }\n            }\n            data.strokeWidth = strokeWidth;\n        }\n    }\n    destroy() {\n        this.target = null;\n        super.destroy();\n    }\n}\n__decorate([\n    targetAttr(onTarget$1)\n], Stroker.prototype, \"target\", void 0);\nfunction onTarget$1(stroker) {\n    const value = stroker.target;\n    stroker.list = value ? (value instanceof Array ? value : [value]) : [];\n    stroker.forceUpdate();\n}\n\nclass SelectArea extends Group {\n    constructor(data) {\n        super(data);\n        this.strokeArea = new Rect({ strokeAlign: 'center' });\n        this.fillArea = new Rect();\n        this.visible = this.hittable = false;\n        this.addMany(this.fillArea, this.strokeArea);\n    }\n    setStyle(style, userStyle) {\n        const { visible, stroke, strokeWidth } = style;\n        this.visible = visible;\n        this.strokeArea.reset(Object.assign({ stroke, strokeWidth }, (userStyle || {})));\n        this.fillArea.reset({ visible: userStyle ? false : true, fill: stroke, opacity: 0.2 });\n    }\n    setBounds(bounds) {\n        this.strokeArea.set(bounds);\n        this.fillArea.set(bounds);\n    }\n}\n\nconst { No, Yes, NoAndSkip, YesAndSkip } = Answer;\nconst EditSelectHelper = {\n    findOne(path) {\n        return path.list.find((leaf) => leaf.editable);\n    },\n    findBounds(leaf, bounds) {\n        if (leaf.__.hittable && leaf.__.visible && !leaf.__.locked && bounds.hit(leaf.__world)) {\n            if (leaf.__.editable) {\n                if (leaf.isBranch && !leaf.__.hitChildren) {\n                    return leaf.__.hitSelf ? YesAndSkip : NoAndSkip;\n                }\n                else if (leaf.isFrame) {\n                    return bounds.includes(leaf.__layout.boxBounds, leaf.__world) ? YesAndSkip : No;\n                }\n                else {\n                    if (bounds.hit(leaf.__layout.boxBounds, leaf.__world) && leaf.__.hitSelf)\n                        return Yes;\n                }\n            }\n            return No;\n        }\n        else {\n            return leaf.isBranch ? NoAndSkip : No;\n        }\n    }\n};\n\nconst { findOne } = EditSelectHelper;\nclass EditSelect extends Group {\n    get dragging() { return !!this.originList; }\n    get running() { const { editor } = this; return this.hittable && editor.visible && editor.hittable && editor.mergeConfig.selector; }\n    get isMoveMode() { return this.app && this.app.interaction.moveMode; }\n    constructor(editor) {\n        super();\n        this.hoverStroker = new Stroker();\n        this.targetStroker = new Stroker();\n        this.bounds = new Bounds();\n        this.selectArea = new SelectArea();\n        this.__eventIds = [];\n        this.editor = editor;\n        this.addMany(this.targetStroker, this.hoverStroker, this.selectArea);\n        this.__listenEvents();\n    }\n    onHover() {\n        const { editor } = this;\n        if (this.running && !this.dragging && !editor.dragging) {\n            const { stroke, strokeWidth, hover, hoverStyle } = editor.mergeConfig;\n            this.hoverStroker.setTarget(hover ? this.editor.hoverTarget : null, Object.assign({ stroke, strokeWidth }, (hoverStyle || {})));\n        }\n        else {\n            this.hoverStroker.target = null;\n        }\n    }\n    onSelect() {\n        if (this.running) {\n            const { mergeConfig: config, list } = this.editor;\n            const { stroke, strokeWidth } = config;\n            this.targetStroker.setTarget(list, { stroke, strokeWidth: Math.max(1, strokeWidth / 2) });\n            this.hoverStroker.target = null;\n        }\n    }\n    update() {\n        if (this.targetStroker.target)\n            this.targetStroker.forceUpdate();\n    }\n    onPointerMove(e) {\n        const { app, editor } = this;\n        if (this.running && !this.isMoveMode && app.interaction.canHover && !app.interaction.dragging) {\n            const find = this.findUI(e);\n            editor.hoverTarget = editor.hasItem(find) ? null : find;\n        }\n        if (this.isMoveMode) {\n            editor.hoverTarget = null;\n        }\n    }\n    onBeforeDown(e) {\n        if (e.multiTouch)\n            return;\n        const { select } = this.editor.mergeConfig;\n        if (select === 'press') {\n            if (this.app.config.mobile) {\n                this.waitSelect = () => this.checkAndSelect(e);\n            }\n            else {\n                this.checkAndSelect(e);\n            }\n        }\n    }\n    onTap(e) {\n        if (e.multiTouch)\n            return;\n        const { editor } = this;\n        const { select } = editor.mergeConfig;\n        if (select === 'tap')\n            this.checkAndSelect(e);\n        else if (this.waitSelect)\n            this.waitSelect();\n        if (this.needRemoveItem) {\n            editor.removeItem(this.needRemoveItem);\n        }\n        else if (this.isMoveMode) {\n            editor.target = null;\n        }\n    }\n    checkAndSelect(e) {\n        this.needRemoveItem = null;\n        if (this.allowSelect(e)) {\n            const { editor } = this;\n            const find = this.findUI(e);\n            if (find) {\n                if (this.isMultipleSelect(e)) {\n                    if (editor.hasItem(find))\n                        this.needRemoveItem = find;\n                    else\n                        editor.addItem(find);\n                }\n                else {\n                    editor.target = find;\n                }\n            }\n            else if (this.allow(e.target)) {\n                if (!e.shiftKey)\n                    editor.target = null;\n            }\n        }\n    }\n    onDragStart(e) {\n        if (e.multiTouch)\n            return;\n        if (this.waitSelect)\n            this.waitSelect();\n        if (this.allowDrag(e)) {\n            const { editor } = this;\n            const { stroke, area } = editor.mergeConfig;\n            const { x, y } = e.getInnerPoint(this);\n            this.bounds.set(x, y);\n            this.selectArea.setStyle({ visible: true, stroke, x, y }, area);\n            this.selectArea.setBounds(this.bounds.get());\n            this.originList = editor.leafList.clone();\n        }\n    }\n    onDrag(e) {\n        if (e.multiTouch)\n            return;\n        if (this.editor.dragging)\n            return this.onDragEnd(e);\n        if (this.dragging) {\n            const { editor } = this;\n            const total = e.getInnerTotal(this);\n            const dragBounds = this.bounds.clone().unsign();\n            const list = new LeafList(editor.app.find(EditSelectHelper.findBounds, dragBounds));\n            this.bounds.width = total.x;\n            this.bounds.height = total.y;\n            this.selectArea.setBounds(dragBounds.get());\n            if (list.length) {\n                const selectList = [];\n                this.originList.forEach(item => { if (!list.has(item))\n                    selectList.push(item); });\n                list.forEach(item => { if (!this.originList.has(item))\n                    selectList.push(item); });\n                if (selectList.length !== editor.list.length || editor.list.some((child, index) => child !== selectList[index])) {\n                    editor.target = selectList;\n                }\n            }\n            else {\n                editor.target = this.originList.list;\n            }\n        }\n    }\n    onDragEnd(e) {\n        if (e.multiTouch)\n            return;\n        if (this.dragging)\n            this.originList = null, this.selectArea.visible = false;\n    }\n    onAutoMove(e) {\n        if (this.dragging) {\n            const { x, y } = e.getLocalMove(this);\n            this.bounds.x += x;\n            this.bounds.y += y;\n        }\n    }\n    allow(target) {\n        return target.leafer !== this.editor.leafer;\n    }\n    allowDrag(e) {\n        if (this.running && this.editor.mergeConfig.boxSelect && !e.target.draggable) {\n            return (!this.editor.editing && this.allow(e.target)) || (e.shiftKey && !findOne(e.path));\n        }\n        else {\n            return false;\n        }\n    }\n    allowSelect(e) {\n        return this.running && !this.isMoveMode && !e.middle;\n    }\n    findDeepOne(e) {\n        const options = { exclude: new LeafList(this.editor.editBox.rect) };\n        return findOne(e.target.leafer.interaction.findPath(e, options));\n    }\n    findUI(e) {\n        return this.isMultipleSelect(e) ? this.findDeepOne(e) : findOne(e.path);\n    }\n    isMultipleSelect(e) {\n        return e.shiftKey || this.editor.mergeConfig.continuousSelect;\n    }\n    __listenEvents() {\n        const { editor } = this;\n        editor.waitLeafer(() => {\n            const { app } = editor;\n            app.selector.proxy = editor;\n            this.__eventIds = [\n                editor.on_(EditorEvent.HOVER, this.onHover, this),\n                editor.on_(EditorEvent.SELECT, this.onSelect, this),\n                app.on_(PointerEvent.MOVE, this.onPointerMove, this),\n                app.on_(PointerEvent.BEFORE_DOWN, this.onBeforeDown, this),\n                app.on_(PointerEvent.TAP, this.onTap, this),\n                app.on_(DragEvent.START, this.onDragStart, this, true),\n                app.on_(DragEvent.DRAG, this.onDrag, this),\n                app.on_(DragEvent.END, this.onDragEnd, this),\n                app.on_(MoveEvent.MOVE, this.onAutoMove, this),\n                app.on_([ZoomEvent.ZOOM, MoveEvent.MOVE], () => { this.editor.hoverTarget = null; }),\n            ];\n        });\n    }\n    __removeListenEvents() {\n        if (this.__eventIds) {\n            this.off_(this.__eventIds);\n            this.__eventIds.length = 0;\n        }\n    }\n    destroy() {\n        this.editor = this.originList = this.needRemoveItem = null;\n        this.__removeListenEvents();\n        super.destroy();\n    }\n}\n\nconst { topLeft, top, topRight, right: right$1, bottomRight, bottom, bottomLeft, left: left$1 } = Direction9;\nconst { toPoint } = AroundHelper;\nconst { within } = MathHelper;\nconst EditDataHelper = {\n    getScaleData(element, startBounds, direction, totalMove, lockRatio, around, flipable, scaleMode) {\n        let align, origin = {}, scaleX = 1, scaleY = 1;\n        const { boxBounds, widthRange, heightRange } = element;\n        const { width, height } = startBounds;\n        if (around) {\n            totalMove.x *= 2;\n            totalMove.y *= 2;\n        }\n        const originChangedScaleX = element.scaleX / startBounds.scaleX;\n        const originChangedScaleY = element.scaleY / startBounds.scaleY;\n        const signX = originChangedScaleX < 0 ? -1 : 1;\n        const signY = originChangedScaleY < 0 ? -1 : 1;\n        const changedScaleX = scaleMode ? originChangedScaleX : signX * boxBounds.width / width;\n        const changedScaleY = scaleMode ? originChangedScaleY : signY * boxBounds.height / height;\n        totalMove.x *= scaleMode ? originChangedScaleX : signX;\n        totalMove.y *= scaleMode ? originChangedScaleY : signY;\n        if (Math.abs(totalMove.x) === width)\n            totalMove.x += 0.1;\n        if (Math.abs(totalMove.y) === height)\n            totalMove.y += 0.1;\n        const topScale = (-totalMove.y + height) / height;\n        const rightScale = (totalMove.x + width) / width;\n        const bottomScale = (totalMove.y + height) / height;\n        const leftScale = (-totalMove.x + width) / width;\n        switch (direction) {\n            case top:\n                scaleY = topScale;\n                align = 'bottom';\n                break;\n            case right$1:\n                scaleX = rightScale;\n                align = 'left';\n                break;\n            case bottom:\n                scaleY = bottomScale;\n                align = 'top';\n                break;\n            case left$1:\n                scaleX = leftScale;\n                align = 'right';\n                break;\n            case topLeft:\n                scaleY = topScale;\n                scaleX = leftScale;\n                align = 'bottom-right';\n                break;\n            case topRight:\n                scaleY = topScale;\n                scaleX = rightScale;\n                align = 'bottom-left';\n                break;\n            case bottomRight:\n                scaleY = bottomScale;\n                scaleX = rightScale;\n                align = 'top-left';\n                break;\n            case bottomLeft:\n                scaleY = bottomScale;\n                scaleX = leftScale;\n                align = 'top-right';\n        }\n        if (lockRatio) {\n            const unlockSide = lockRatio === 'corner' && direction % 2;\n            if (!unlockSide) {\n                let scale;\n                switch (direction) {\n                    case top:\n                    case bottom:\n                        scale = scaleY;\n                        break;\n                    case left$1:\n                    case right$1:\n                        scale = scaleX;\n                        break;\n                    default:\n                        scale = Math.sqrt(Math.abs(scaleX * scaleY));\n                }\n                scaleX = scaleX < 0 ? -scale : scale;\n                scaleY = scaleY < 0 ? -scale : scale;\n            }\n        }\n        scaleX /= changedScaleX;\n        scaleY /= changedScaleY;\n        if (!flipable) {\n            const { worldTransform } = element;\n            if (scaleX < 0)\n                scaleX = 1 / boxBounds.width / worldTransform.scaleX;\n            if (scaleY < 0)\n                scaleY = 1 / boxBounds.height / worldTransform.scaleY;\n        }\n        if (widthRange) {\n            const nowWidth = boxBounds.width * element.scaleX;\n            scaleX = within(nowWidth * scaleX, widthRange) / nowWidth;\n        }\n        if (heightRange) {\n            const nowHeight = boxBounds.height * element.scaleY;\n            scaleY = within(nowHeight * scaleY, heightRange) / nowHeight;\n        }\n        toPoint(around || align, boxBounds, origin, true);\n        return { origin, scaleX, scaleY, direction, lockRatio, around };\n    },\n    getRotateData(bounds, direction, current, last, around) {\n        let align, origin = {};\n        switch (direction) {\n            case topLeft:\n                align = 'bottom-right';\n                break;\n            case topRight:\n                align = 'bottom-left';\n                break;\n            case bottomRight:\n                align = 'top-left';\n                break;\n            case bottomLeft:\n                align = 'top-right';\n                break;\n            default:\n                align = 'center';\n        }\n        toPoint(around || align, bounds, origin, true);\n        return { origin, rotation: PointHelper.getRotation(last, origin, current) };\n    },\n    getSkewData(bounds, direction, move, around) {\n        let align, origin = {}, skewX = 0, skewY = 0;\n        let last;\n        switch (direction) {\n            case top:\n                last = { x: 0.5, y: 0 };\n                align = 'bottom';\n                skewX = 1;\n                break;\n            case bottom:\n                last = { x: 0.5, y: 1 };\n                align = 'top';\n                skewX = 1;\n                break;\n            case left$1:\n                last = { x: 0, y: 0.5 };\n                align = 'right';\n                skewY = 1;\n                break;\n            case right$1:\n                last = { x: 1, y: 0.5 };\n                align = 'left';\n                skewY = 1;\n        }\n        const { width, height } = bounds;\n        last.x = last.x * width;\n        last.y = last.y * height;\n        toPoint(around || align, bounds, origin, true);\n        const rotation = PointHelper.getRotation(last, origin, { x: last.x + (skewX ? move.x : 0), y: last.y + (skewY ? move.y : 0) });\n        skewX ? skewX = -rotation : skewY = rotation;\n        return { origin, skewX, skewY };\n    },\n    getAround(around, altKey) {\n        return (altKey && !around) ? 'center' : around;\n    },\n    getRotateDirection(direction, rotation, totalDirection = 8) {\n        direction = (direction + Math.round(rotation / (360 / totalDirection))) % totalDirection;\n        if (direction < 0)\n            direction += totalDirection;\n        return direction;\n    },\n    getFlipDirection(direction, flipedX, flipedY) {\n        if (flipedX) {\n            switch (direction) {\n                case left$1:\n                    direction = right$1;\n                    break;\n                case topLeft:\n                    direction = topRight;\n                    break;\n                case bottomLeft:\n                    direction = bottomRight;\n                    break;\n                case right$1:\n                    direction = left$1;\n                    break;\n                case topRight:\n                    direction = topLeft;\n                    break;\n                case bottomRight:\n                    direction = bottomLeft;\n                    break;\n            }\n        }\n        if (flipedY) {\n            switch (direction) {\n                case top:\n                    direction = bottom;\n                    break;\n                case topLeft:\n                    direction = bottomLeft;\n                    break;\n                case topRight:\n                    direction = bottomRight;\n                    break;\n                case bottom:\n                    direction = top;\n                    break;\n                case bottomLeft:\n                    direction = topLeft;\n                    break;\n                case bottomRight:\n                    direction = topRight;\n                    break;\n            }\n        }\n        return direction;\n    }\n};\n\nconst cacheCursors = {};\nfunction updateCursor(editor, e) {\n    const { editBox } = editor, point = editBox.enterPoint;\n    if (!point || !editor.editing || !editBox.visible)\n        return;\n    if (point.name === 'circle')\n        return;\n    if (point.pointType === 'button') {\n        if (!point.cursor)\n            point.cursor = 'pointer';\n        return;\n    }\n    let { rotation } = editBox;\n    const { resizeCursor, rotateCursor, skewCursor, resizeable, rotateable, skewable } = editor.mergeConfig;\n    const { pointType } = point, { flippedX, flippedY } = editBox;\n    let showResize = pointType === 'resize';\n    if (showResize && rotateable && (e.metaKey || e.ctrlKey || !resizeable))\n        showResize = false;\n    const showSkew = skewable && !showResize && point.name === 'resize-line';\n    const cursor = showSkew ? skewCursor : (showResize ? resizeCursor : rotateCursor);\n    rotation += (EditDataHelper.getFlipDirection(point.direction, flippedX, flippedY) + 1) * 45;\n    rotation = Math.round(MathHelper.formatRotation(rotation, true) / 2) * 2;\n    const { url, x, y } = cursor;\n    const key = url + rotation;\n    if (cacheCursors[key]) {\n        point.cursor = cacheCursors[key];\n    }\n    else {\n        cacheCursors[key] = point.cursor = { url: toDataURL(url, rotation), x, y };\n    }\n}\nfunction updateMoveCursor(editor) {\n    const { moveCursor, moveable } = editor.mergeConfig;\n    editor.editBox.rect.cursor = moveable ? moveCursor : undefined;\n}\nfunction toDataURL(svg, rotation) {\n    return '\"data:image/svg+xml,' + encodeURIComponent(svg.replace('{{rotation}}', rotation.toString())) + '\"';\n}\n\nclass EditPoint extends Box {\n}\n\nconst fourDirection = ['top', 'right', 'bottom', 'left'];\nclass EditBox extends Group {\n    get flipped() { return this.flippedX || this.flippedY; }\n    get flippedX() { return this.scaleX < 0; }\n    get flippedY() { return this.scaleY < 0; }\n    get flippedOne() { return this.scaleX * this.scaleY < 0; }\n    constructor(editor) {\n        super();\n        this.view = new Group();\n        this.rect = new Box({ name: 'rect', hitFill: 'all', hitStroke: 'none', strokeAlign: 'center', hitRadius: 5 });\n        this.circle = new EditPoint({ name: 'circle', strokeAlign: 'center', around: 'center', cursor: 'crosshair', hitRadius: 5 });\n        this.buttons = new Group({ around: 'center', hitSelf: false });\n        this.resizePoints = [];\n        this.rotatePoints = [];\n        this.resizeLines = [];\n        this.__eventIds = [];\n        this.editor = editor;\n        this.visible = false;\n        this.create();\n        this.__listenEvents();\n    }\n    create() {\n        let rotatePoint, resizeLine, resizePoint;\n        const { view, resizePoints, rotatePoints, resizeLines, rect, circle, buttons } = this;\n        const arounds = ['bottom-right', 'bottom', 'bottom-left', 'left', 'top-left', 'top', 'top-right', 'right'];\n        for (let i = 0; i < 8; i++) {\n            rotatePoint = new EditPoint({ name: 'rotate-point', around: arounds[i], width: 15, height: 15, hitFill: \"all\" });\n            rotatePoints.push(rotatePoint);\n            this.listenPointEvents(rotatePoint, 'rotate', i);\n            if (i % 2) {\n                resizeLine = new EditPoint({ name: 'resize-line', around: 'center', width: 10, height: 10, hitFill: \"all\" });\n                resizeLines.push(resizeLine);\n                this.listenPointEvents(resizeLine, 'resize', i);\n            }\n            resizePoint = new EditPoint({ name: 'resize-point', hitRadius: 5 });\n            resizePoints.push(resizePoint);\n            this.listenPointEvents(resizePoint, 'resize', i);\n        }\n        this.listenPointEvents(circle, 'rotate', 2);\n        view.addMany(...rotatePoints, rect, circle, buttons, ...resizeLines, ...resizePoints);\n        this.add(view);\n    }\n    load() {\n        const { mergeConfig, element, single } = this.editor;\n        const { rect, circle, resizePoints } = this;\n        const { stroke, strokeWidth } = mergeConfig;\n        const pointsStyle = this.getPointsStyle();\n        const middlePointsStyle = this.getMiddlePointsStyle();\n        let resizeP;\n        for (let i = 0; i < 8; i++) {\n            resizeP = resizePoints[i];\n            resizeP.set(this.getPointStyle((i % 2) ? middlePointsStyle[((i - 1) / 2) % middlePointsStyle.length] : pointsStyle[(i / 2) % pointsStyle.length]));\n            if (!(i % 2))\n                resizeP.rotation = (i / 2) * 90;\n        }\n        circle.set(this.getPointStyle(mergeConfig.circle || mergeConfig.rotatePoint || pointsStyle[0]));\n        rect.set(Object.assign({ stroke, strokeWidth }, (mergeConfig.rect || {})));\n        rect.hittable = !single;\n        rect.syncEventer = single && this.editor;\n        if (single) {\n            element.syncEventer = rect;\n            this.app.interaction.bottomList = [{ target: rect, proxy: element }];\n        }\n    }\n    update(bounds) {\n        this.visible = !this.editor.element.locked;\n        if (this.view.worldOpacity) {\n            const { mergeConfig } = this.editor;\n            const { width, height } = bounds;\n            const { rect, circle, buttons, resizePoints, rotatePoints, resizeLines } = this;\n            const { middlePoint, resizeable, rotateable, hideOnSmall } = mergeConfig;\n            const smallSize = typeof hideOnSmall === 'number' ? hideOnSmall : 10;\n            const showPoints = !(hideOnSmall && width < smallSize && height < smallSize);\n            let point = {}, rotateP, resizeP, resizeL;\n            for (let i = 0; i < 8; i++) {\n                AroundHelper.toPoint(AroundHelper.directionData[i], bounds, point);\n                resizeP = resizePoints[i];\n                rotateP = rotatePoints[i];\n                resizeL = resizeLines[Math.floor(i / 2)];\n                resizeP.set(point);\n                rotateP.set(point);\n                resizeL.set(point);\n                resizeP.visible = resizeL.visible = showPoints && !!(resizeable || rotateable);\n                rotateP.visible = showPoints && rotateable && resizeable && !mergeConfig.rotatePoint;\n                if (i % 2) {\n                    resizeP.visible = rotateP.visible = showPoints && !!middlePoint;\n                    if (((i + 1) / 2) % 2) {\n                        resizeL.width = width;\n                        if (resizeP.width > width - 30)\n                            resizeP.visible = false;\n                    }\n                    else {\n                        resizeL.height = height;\n                        resizeP.rotation = 90;\n                        if (resizeP.width > height - 30)\n                            resizeP.visible = false;\n                    }\n                }\n            }\n            circle.visible = showPoints && rotateable && !!(mergeConfig.circle || mergeConfig.rotatePoint);\n            if (circle.visible)\n                this.layoutCircle(mergeConfig);\n            if (rect.path)\n                rect.path = null;\n            rect.set(Object.assign(Object.assign({}, bounds), { visible: true }));\n            buttons.visible = showPoints && buttons.children.length > 0;\n            if (buttons.visible)\n                this.layoutButtons(mergeConfig);\n        }\n    }\n    layoutCircle(config) {\n        const { circleDirection, circleMargin, buttonsMargin, buttonsDirection, middlePoint } = config;\n        const direction = fourDirection.indexOf(circleDirection || ((this.buttons.children.length && buttonsDirection === 'bottom') ? 'top' : 'bottom'));\n        this.setButtonPosition(this.circle, direction, circleMargin || buttonsMargin, !!middlePoint);\n    }\n    layoutButtons(config) {\n        const { buttons } = this;\n        const { buttonsDirection, buttonsFixed, buttonsMargin, middlePoint } = config;\n        const { flippedX, flippedY } = this;\n        let index = fourDirection.indexOf(buttonsDirection);\n        if ((index % 2 && flippedX) || ((index + 1) % 2 && flippedY)) {\n            if (buttonsFixed)\n                index = (index + 2) % 4;\n        }\n        const direction = buttonsFixed ? EditDataHelper.getRotateDirection(index, this.flippedOne ? this.rotation : -this.rotation, 4) : index;\n        this.setButtonPosition(buttons, direction, buttonsMargin, !!middlePoint);\n        if (buttonsFixed)\n            buttons.rotation = (direction - index) * 90;\n        buttons.scaleX = flippedX ? -1 : 1;\n        buttons.scaleY = flippedY ? -1 : 1;\n    }\n    setButtonPosition(buttons, direction, buttonsMargin, useMiddlePoint) {\n        const point = this.resizePoints[direction * 2 + 1];\n        const useX = direction % 2;\n        const sign = (!direction || direction === 3) ? -1 : 1;\n        const useWidth = direction % 2;\n        const margin = (buttonsMargin + (useWidth ? ((useMiddlePoint ? point.width : 0) + buttons.boxBounds.width) : ((useMiddlePoint ? point.height : 0) + buttons.boxBounds.height)) / 2) * sign;\n        if (useX) {\n            buttons.x = point.x + margin;\n            buttons.y = point.y;\n        }\n        else {\n            buttons.x = point.x;\n            buttons.y = point.y + margin;\n        }\n    }\n    unload() {\n        this.visible = false;\n    }\n    getPointStyle(userStyle) {\n        const { stroke, strokeWidth, pointFill, pointSize, pointRadius } = this.editor.mergeConfig;\n        const defaultStyle = { fill: pointFill, stroke, strokeWidth, around: 'center', strokeAlign: 'center', width: pointSize, height: pointSize, cornerRadius: pointRadius, offsetX: 0, offsetY: 0 };\n        return userStyle ? Object.assign(defaultStyle, userStyle) : defaultStyle;\n    }\n    getPointsStyle() {\n        const { point } = this.editor.mergeConfig;\n        return point instanceof Array ? point : [point];\n    }\n    getMiddlePointsStyle() {\n        const { middlePoint } = this.editor.mergeConfig;\n        return middlePoint instanceof Array ? middlePoint : (middlePoint ? [middlePoint] : this.getPointsStyle());\n    }\n    onSelect(e) {\n        if (e.oldList.length === 1) {\n            e.oldList[0].syncEventer = null;\n            if (this.app)\n                this.app.interaction.bottomList = null;\n        }\n    }\n    onDragStart(e) {\n        this.dragging = true;\n        const { editor } = this;\n        if (e.current.name === 'rect') {\n            this.moving = true;\n            editor.dragStartPoint = { x: editor.element.x, y: editor.element.y };\n            editor.opacity = editor.mergeConfig.hideOnMove ? 0 : 1;\n        }\n        else if (e.current.pointType === 'resize') {\n            editor.dragStartBounds = Object.assign({}, editor.element.getLayoutBounds('box', 'local'));\n            editor.resizeDirection = e.current.direction;\n        }\n    }\n    onDragEnd(e) {\n        this.dragging = false;\n        this.moving = false;\n        if (e.current.name === 'rect')\n            this.editor.opacity = 1;\n        this.editor.resizeDirection = undefined;\n    }\n    onDrag(e) {\n        const { editor } = this;\n        const point = this.enterPoint = e.current;\n        if (point.pointType === 'rotate' || e.metaKey || e.ctrlKey || !editor.mergeConfig.resizeable) {\n            if (editor.mergeConfig.rotateable)\n                editor.onRotate(e);\n        }\n        else if (point.pointType === 'resize') {\n            editor.onScale(e);\n        }\n        updateCursor(editor, e);\n    }\n    onArrow(e) {\n        if (this.editor.editing && this.editor.mergeConfig.keyEvent) {\n            const move = { x: 0, y: 0 };\n            const distance = e.shiftKey ? 10 : 1;\n            switch (e.code) {\n                case 'ArrowDown':\n                    move.y = distance;\n                    break;\n                case 'ArrowUp':\n                    move.y = -distance;\n                    break;\n                case 'ArrowLeft':\n                    move.x = -distance;\n                    break;\n                case 'ArrowRight':\n                    move.x = distance;\n            }\n            this.editor.move(move);\n        }\n    }\n    onDoubleTap(e) {\n        if (this.editor.mergeConfig.openInner === 'double')\n            this.openInner(e);\n    }\n    onLongPress(e) {\n        if (this.editor.mergeConfig.openInner === 'long')\n            this.openInner(e);\n    }\n    openInner(e) {\n        const { editor } = this;\n        if (editor.single) {\n            const { element } = editor;\n            if (element.isBranch && !element.editInner) {\n                if (element.textBox) {\n                    const { children } = element;\n                    const find = children.find(item => item.editable && item instanceof Text) || children.find(item => item instanceof Text);\n                    if (find)\n                        return editor.openInnerEditor(find);\n                }\n                editor.openGroup(element);\n                editor.target = editor.selector.findDeepOne(e);\n            }\n            else {\n                editor.openInnerEditor();\n            }\n        }\n    }\n    listenPointEvents(point, type, direction) {\n        const { editor } = this;\n        point.direction = direction;\n        point.pointType = type;\n        point.on_(DragEvent.START, this.onDragStart, this);\n        point.on_(DragEvent.DRAG, this.onDrag, this);\n        point.on_(DragEvent.END, this.onDragEnd, this);\n        point.on_(PointerEvent.LEAVE, () => this.enterPoint = null);\n        if (point.name !== 'circle')\n            point.on_(PointerEvent.ENTER, (e) => { this.enterPoint = point, updateCursor(editor, e); });\n    }\n    __listenEvents() {\n        const { rect, editor } = this;\n        this.__eventIds = [\n            editor.on_(EditorEvent.SELECT, this.onSelect, this),\n            rect.on_(DragEvent.START, this.onDragStart, this),\n            rect.on_(DragEvent.DRAG, editor.onMove, editor),\n            rect.on_(DragEvent.END, this.onDragEnd, this),\n            rect.on_(PointerEvent.ENTER, () => updateMoveCursor(editor)),\n            rect.on_(PointerEvent.DOUBLE_TAP, this.onDoubleTap, this),\n            rect.on_(PointerEvent.LONG_PRESS, this.onLongPress, this)\n        ];\n    }\n    __removeListenEvents() {\n        this.off_(this.__eventIds);\n        this.__eventIds.length = 0;\n    }\n    destroy() {\n        this.editor = null;\n        this.__removeListenEvents();\n        super.destroy();\n    }\n}\n\nclass EditMask extends UI {\n    constructor(editor) {\n        super();\n        this.editor = editor;\n        this.hittable = false;\n    }\n    __draw(canvas, options) {\n        const { editor } = this;\n        const { mask } = editor.mergeConfig;\n        if (mask && editor.list.length) {\n            const { rect } = editor.editBox;\n            const { width, height } = rect.__;\n            canvas.resetTransform();\n            canvas.fillWorld(canvas.bounds, mask === true ? 'rgba(0,0,0,0.8)' : mask);\n            canvas.setWorld(rect.__world, options.matrix);\n            canvas.clearRect(0, 0, width, height);\n        }\n    }\n    destroy() {\n        this.editor = null;\n        super.destroy();\n    }\n}\n\nconst filterStyle = `\n<feOffset dy=\"1\"/>\n<feGaussianBlur stdDeviation=\"1.5\"/>\n<feColorMatrix type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0\"/>\n<feBlend mode=\"normal\" in=\"SourceGraphic\" result=\"shape\"/>`;\nconst resizeSVG = `\n<svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n<g filter=\"url(#f)\">\n<g transform=\"rotate({{rotation}},12,12)\">\n<path d=\"M7.5 8.0H8.5V5.9L6.8 7.2L7.5 8.0ZM3 11.4L2.3 10.6L1.3 11.4L2.3 12.2L3 11.4ZM7.5 10.4H6.5V11.4H7.5V10.4ZM16.5 10.4V11.4H17.5V10.4H16.5ZM16.5 8.0L17.1 7.2L15.5 5.9V8.0H16.5ZM21 11.4L21.6 12.2L22.6 11.4L21.6 10.6L21 11.4ZM16.5 14.9H15.5V16.9L17.1 15.7L16.5 14.9ZM16.5 12.4H17.5V11.4H16.5V12.4ZM7.5 12.4V11.4H6.5V12.4H7.5ZM7.5 14.9L6.8 15.7L8.5 16.9V14.9H7.5ZM6.8 7.2L2.3 10.6L3.6 12.2L8.1 8.7L6.8 7.2ZM8.5 10.4V8.0H6.5V10.4H8.5ZM16.5 9.4H7.5V11.4H16.5V9.4ZM17.5 10.4V8.0H15.5V10.4H17.5ZM15.8 8.7L20.3 12.2L21.6 10.6L17.1 7.2L15.8 8.7ZM20.3 10.6L15.8 14.1L17.1 15.7L21.6 12.2L20.3 10.6ZM17.5 14.9V12.4H15.5V14.9H17.5ZM7.5 13.4H16.5V11.4H7.5V13.4ZM8.5 14.9V12.4H6.5V14.9H8.5ZM2.3 12.2L6.8 15.7L8.1 14.1L3.6 10.6L2.3 12.2Z\" fill=\"white\"/>\n<path fill-rule=\"evenodd\" d=\"M3 11.4L7.5 8.0V10.4H16.5V8.0L21 11.4L16.5 14.9V12.4H7.5V14.9L3 11.4Z\" fill=\"black\"/>\n</g>\n</g>\n<defs>\n<filter id=\"f\" x=\"-1.6\" y=\"3.9\" width=\"27.2\" height=\"16.9\" filterUnits=\"userSpaceOnUse\">\n${filterStyle}\n</filter>\n</defs>\n</svg>\n`;\nconst rotateSVG = `\n<svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n<g filter=\"url(#f)\">\n<g transform=\"rotate(135,12,12),rotate({{rotation}},12,12)\">\n<path d=\"M20.4 8H21.4L20.8 7.1L17.3 2.6L17 2.1L16.6 2.6L13.1 7.1L12.5 8H13.5H15.4C14.9 11.8 11.8 14.9 8 15.4V13.5V12.5L7.1 13.1L2.6 16.6L2.1 17L2.6 17.3L7.1 20.8L8 21.4V20.4V18.4C13.5 17.9 17.9 13.5 18.4 8H20.4Z\" stroke=\"white\"/>\n<path fill-rule=\"evenodd\" d=\"M17 3L20.4 7.5H17.9C17.7 13.1 13.1 17.7 7.5 17.9V20.4L3 17L7.5 13.5V15.9C12.0 15.7 15.7 12.0 15.9 7.5H13.5L17 3Z\" fill=\"black\"/>\n</g>\n</g>\n<defs>\n<filter id=\"f\" x=\"-1.6\" y=\"-0.6\" width=\"27.1\" height=\"27.1\" filterUnits=\"userSpaceOnUse\">\n${filterStyle}\n</filter>\n</defs>\n</svg>\n`;\nconst skewSVG = `\n<svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n<g filter=\"url(#f)\">\n<g transform=\"rotate(90,12,12),rotate({{rotation}},12,12)\">\n<path d=\"M21 10.4L21 11.4L23.8 11.4L21.6 9.6L21 10.4ZM17 10.4V11.4L17 11.4L17 10.4ZM15.5 6L16.1 5.2L14.5 3.9V6H15.5ZM15.5 8.4V9.4H16.5V8.4H15.5ZM6 8.4V7.4H5V8.4H6ZM6 10.4H5V11.4H6V10.4ZM7 14.4V13.4L7 13.4L7 14.4ZM3 14.4L3 13.4L0.1 13.4L2.3 15.2L3 14.4ZM8.5 18.9L7.8 19.7L9.5 21.0V18.9H8.5ZM8.5 16.4V15.4H7.5V16.4H8.5ZM19 16.4V17.4H20V16.4H19ZM19 14.4H20V13.4H19V14.4ZM21 9.4L17 9.4L17 11.4L21 11.4L21 9.4ZM14.8 6.7L20.3 11.2L21.6 9.6L16.1 5.2L14.8 6.7ZM16.5 8.4V6H14.5V8.4H16.5ZM6 9.4H15.5V7.4H6V9.4ZM7 10.4V8.4H5V10.4H7ZM15.5 9.4H6V11.4H15.5V9.4ZM17 9.4H15.5V11.4H17V9.4ZM7 15.4H8.5V13.4H7V15.4ZM3 15.4L7 15.4L7 13.4L3 13.4L3 15.4ZM9.1 18.1L3.6 13.6L2.3 15.2L7.8 19.7L9.1 18.1ZM7.5 16.4V18.9H9.5V16.4H7.5ZM19 15.4H8.5V17.4H19V15.4ZM18 14.4V16.4H20V14.4H18ZM8.5 15.4H19V13.4H8.5V15.4Z\" fill=\"white\"/>\n<path fill-rule=\"evenodd\" d=\"M17 10.4L21 10.4L15.5 6V8.4H6V10.4H15.5H17ZM8.5 14.4H7L3 14.4L8.5 18.9V16.4H19V14.4H8.5Z\" fill=\"black\"/>\n</g>\n</g>\n<defs>\n<filter x=\"-2.8\" y=\"1.9\" width=\"29.6\" height=\"23.1\" filterUnits=\"userSpaceOnUse\" >\n${filterStyle}\n</filter>\n</defs>\n</svg>\n`;\n\nconst config = {\n    editSize: 'size',\n    keyEvent: true,\n    stroke: '#836DFF',\n    strokeWidth: 2,\n    pointFill: '#FFFFFF',\n    pointSize: 10,\n    pointRadius: 16,\n    rotateGap: 45,\n    buttonsDirection: 'bottom',\n    buttonsMargin: 12,\n    hideOnSmall: true,\n    moveCursor: 'move',\n    resizeCursor: { url: resizeSVG, x: 12, y: 12 },\n    rotateCursor: { url: rotateSVG, x: 12, y: 12 },\n    skewCursor: { url: skewSVG, x: 12, y: 12 },\n    selector: true,\n    hover: true,\n    select: 'press',\n    openInner: 'double',\n    boxSelect: true,\n    moveable: true,\n    resizeable: true,\n    flipable: true,\n    rotateable: true,\n    skewable: true\n};\n\nconst bounds = new Bounds();\nfunction simulate(editor) {\n    const { simulateTarget, list } = editor;\n    const { zoomLayer } = list[0].leafer.zoomLayer;\n    simulateTarget.safeChange(() => simulateTarget.reset(bounds.setListWithFn(list, (leaf) => leaf.getBounds('box', 'page')).get()));\n    zoomLayer.add(simulateTarget);\n}\n\nfunction onTarget(editor, oldValue) {\n    const { target } = editor;\n    if (target) {\n        editor.leafList = target instanceof LeafList ? target : new LeafList(target instanceof Array ? target : target);\n    }\n    else {\n        editor.simulateTarget.remove();\n        editor.leafList.reset();\n        editor.closeInnerEditor();\n    }\n    editor.emitEvent(new EditorEvent(EditorEvent.SELECT, { editor, value: target, oldValue }));\n    editor.checkOpenedGroups();\n    if (editor.editing) {\n        editor.waitLeafer(() => {\n            if (editor.multiple)\n                simulate(editor);\n            updateMoveCursor(editor);\n            editor.updateEditTool();\n            editor.update();\n            editor.listenTargetEvents();\n        });\n    }\n    else {\n        editor.updateEditTool();\n        editor.removeTargetEvents();\n    }\n}\nfunction onHover(editor, oldValue) {\n    editor.emitEvent(new EditorEvent(EditorEvent.HOVER, { editor, value: editor.hoverTarget, oldValue }));\n}\n\nconst order = (a, b) => a.parent.children.indexOf(a) - b.parent.children.indexOf(b);\nconst reverseOrder = (a, b) => b.parent.children.indexOf(b) - a.parent.children.indexOf(a);\nconst EditorHelper = {\n    group(list, element, userGroup) {\n        list.sort(reverseOrder);\n        const { app, parent } = list[0];\n        let group;\n        if (userGroup && userGroup.add) {\n            group = userGroup;\n        }\n        else {\n            group = new Group(userGroup);\n        }\n        parent.addAt(group, parent.children.indexOf(list[0]));\n        list.sort(order);\n        const matrx = new Matrix(element.worldTransform);\n        matrx.divideParent(parent.worldTransform);\n        group.setTransform(matrx);\n        group.editable = true;\n        group.hitChildren = false;\n        app.lockLayout();\n        list.forEach(child => child.dropTo(group));\n        app.unlockLayout();\n        return group;\n    },\n    ungroup(list) {\n        const { app } = list[0];\n        const ungroupList = [];\n        app.lockLayout();\n        list.forEach(leaf => {\n            if (leaf.isBranch && !leaf.isBranchLeaf) {\n                const { parent, children } = leaf;\n                while (children.length) {\n                    ungroupList.push(children[0]);\n                    children[0].dropTo(parent, parent.children.indexOf(leaf));\n                }\n                leaf.remove();\n            }\n            else {\n                ungroupList.push(leaf);\n            }\n        });\n        app.unlockLayout();\n        return ungroupList;\n    },\n    toTop(list) {\n        list.sort(order);\n        list.forEach(leaf => {\n            if (leaf.parent)\n                leaf.parent.add(leaf);\n        });\n    },\n    toBottom(list) {\n        list.sort(reverseOrder);\n        list.forEach(leaf => {\n            if (leaf.parent)\n                leaf.parent.addAt(leaf, 0);\n        });\n    }\n};\n\nconst debug = Debug.get('EditToolCreator');\nfunction registerEditTool() {\n    return (target) => {\n        EditToolCreator.register(target);\n    };\n}\nconst registerInnerEditor = registerEditTool;\nconst EditToolCreator = {\n    list: {},\n    register(EditTool) {\n        const { tag } = EditTool.prototype;\n        list[tag] && debug.repeat(tag);\n        list[tag] = EditTool;\n    },\n    get(tag, editor) {\n        return new list[tag](editor);\n    }\n};\nconst { list } = EditToolCreator;\n\nclass InnerEditorEvent extends EditorEvent {\n    constructor(type, data) {\n        super(type, data);\n    }\n}\nInnerEditorEvent.BEFORE_OPEN = 'innerEditor.before_open';\nInnerEditorEvent.OPEN = 'innerEditor.open';\nInnerEditorEvent.BEFORE_CLOSE = 'innerEditor.before_close';\nInnerEditorEvent.CLOSE = 'innerEditor.close';\n\nclass EditorGroupEvent extends EditorEvent {\n    constructor(type, data) {\n        super(type, data);\n    }\n}\nEditorGroupEvent.GROUP = 'editor.group';\nEditorGroupEvent.BEFORE_UNGROUP = 'editor.before_ungroup';\nEditorGroupEvent.UNGROUP = 'editor.ungroup';\nEditorGroupEvent.OPEN = 'editor.open_group';\nEditorGroupEvent.CLOSE = 'editor.close_group';\n\nconst { updateMatrix } = LeafHelper;\nconst checkMap = { x: 1, y: 1, scaleX: 1, scaleY: 1, rotation: 1, skewX: 1, skewY: 1 }, origin = 'top-left';\nclass SimulateElement extends Rect {\n    get __tag() { return 'SimulateElement'; }\n    constructor(editor) {\n        super();\n        this.checkChange = true;\n        this.canChange = true;\n        this.visible = this.hittable = false;\n        this.on(PropertyEvent.CHANGE, (event) => {\n            if (this.checkChange && checkMap[event.attrName]) {\n                const { attrName, newValue, oldValue } = event;\n                const addValue = attrName[0] === 's' ? (newValue || 1) / (oldValue || 1) : (newValue || 0) - (oldValue || 0);\n                this.canChange = false;\n                const data = this.__;\n                data[attrName] = oldValue;\n                updateMatrix(this.parent);\n                updateMatrix(this);\n                const oldMatrix = new Matrix(this.__world);\n                data[attrName] = newValue;\n                this.__layout.rotationChange();\n                updateMatrix(this);\n                this.changedTransform = new Matrix(this.__world).divide(oldMatrix);\n                switch (attrName) {\n                    case 'x':\n                        editor.move(addValue, 0);\n                        break;\n                    case 'y':\n                        editor.move(0, addValue);\n                        break;\n                    case 'rotation':\n                        editor.rotateOf(origin, addValue);\n                        break;\n                    case 'scaleX':\n                        editor.scaleOf(origin, addValue, 1);\n                        break;\n                    case 'scaleY':\n                        editor.scaleOf(origin, 1, addValue);\n                        break;\n                    case 'skewX':\n                        editor.skewOf(origin, addValue, 0);\n                        break;\n                    case 'skewY':\n                        editor.skewOf(origin, 0, addValue);\n                }\n                this.canChange = true;\n            }\n        });\n    }\n    safeChange(changeFn) {\n        if (this.canChange) {\n            this.checkChange = false;\n            changeFn();\n            this.checkChange = true;\n        }\n    }\n}\n\nclass Editor extends Group {\n    get mergeConfig() {\n        const { element, config } = this;\n        return this.single && element.editConfig ? Object.assign(Object.assign({}, config), element.editConfig) : config;\n    }\n    get list() { return this.leafList.list; }\n    get dragHoverExclude() { return [this.editBox.rect]; }\n    get editing() { return !!this.list.length; }\n    get groupOpening() { return !!this.openedGroupList.length; }\n    get multiple() { return this.list.length > 1; }\n    get single() { return this.list.length === 1; }\n    get dragging() { return this.editBox.dragging; }\n    get moving() { return this.editBox.moving; }\n    get element() { return this.multiple ? this.simulateTarget : this.list[0]; }\n    get buttons() { return this.editBox.buttons; }\n    constructor(userConfig, data) {\n        super(data);\n        this.config = DataHelper.clone(config);\n        this.leafList = new LeafList();\n        this.openedGroupList = new LeafList();\n        this.simulateTarget = new SimulateElement(this);\n        this.editBox = new EditBox(this);\n        this.editToolList = {};\n        this.selector = new EditSelect(this);\n        this.editMask = new EditMask(this);\n        this.targetEventIds = [];\n        if (userConfig)\n            this.config = DataHelper.default(userConfig, this.config);\n        this.addMany(this.editMask, this.selector, this.editBox);\n    }\n    select(target) {\n        this.target = target;\n    }\n    cancel() {\n        this.target = null;\n    }\n    hasItem(item) {\n        return this.leafList.has(item);\n    }\n    addItem(item) {\n        if (!this.hasItem(item) && !item.locked)\n            this.leafList.add(item), this.target = this.leafList.list;\n    }\n    removeItem(item) {\n        if (this.hasItem(item))\n            this.leafList.remove(item), this.target = this.leafList.list;\n    }\n    shiftItem(item) {\n        this.hasItem(item) ? this.removeItem(item) : this.addItem(item);\n    }\n    update() {\n        if (this.editing) {\n            if (this.innerEditing)\n                this.innerEditor.update();\n            this.editTool.update();\n            this.selector.update();\n        }\n    }\n    updateEditBox() {\n        if (this.multiple)\n            simulate(this);\n        this.update();\n    }\n    updateEditTool() {\n        const tool = this.editTool;\n        if (tool) {\n            this.editBox.unload();\n            tool.unload();\n            this.editTool = null;\n        }\n        if (this.editing) {\n            const tag = this.single ? this.list[0].editOuter : 'EditTool';\n            this.editTool = this.editToolList[tag] = this.editToolList[tag] || EditToolCreator.get(tag, this);\n            this.editBox.load();\n            this.editTool.load();\n        }\n    }\n    getEditSize(_ui) {\n        return this.mergeConfig.editSize;\n    }\n    onMove(e) {\n        if (e instanceof MoveEvent) {\n            if (e.moveType !== 'drag') {\n                const { moveable, resizeable } = this.mergeConfig;\n                const move = e.getLocalMove(this.element);\n                if (moveable === 'move')\n                    e.stop(), this.move(move.x, move.y);\n                else if (resizeable === 'zoom')\n                    e.stop();\n            }\n        }\n        else {\n            const total = { x: e.totalX, y: e.totalY };\n            if (e.shiftKey) {\n                if (Math.abs(total.x) > Math.abs(total.y))\n                    total.y = 0;\n                else\n                    total.x = 0;\n            }\n            this.move(DragEvent.getValidMove(this.element, this.dragStartPoint, total));\n        }\n    }\n    onScale(e) {\n        const { element } = this;\n        let { around, lockRatio, resizeable, flipable, editSize } = this.mergeConfig;\n        if (e instanceof ZoomEvent) {\n            if (resizeable === 'zoom')\n                e.stop(), this.scaleOf(element.getBoxPoint(e), e.scale, e.scale);\n        }\n        else {\n            const { direction } = e.current;\n            if (e.shiftKey || element.lockRatio)\n                lockRatio = true;\n            const data = EditDataHelper.getScaleData(element, this.dragStartBounds, direction, e.getInnerTotal(element), lockRatio, EditDataHelper.getAround(around, e.altKey), flipable, this.multiple || editSize === 'scale');\n            if (this.editTool.onScaleWithDrag) {\n                data.drag = e;\n                this.scaleWithDrag(data);\n            }\n            else {\n                this.scaleOf(data.origin, data.scaleX, data.scaleY);\n            }\n        }\n    }\n    onRotate(e) {\n        const { skewable, rotateable, around, rotateGap } = this.mergeConfig;\n        const { direction, name } = e.current;\n        if (skewable && name === 'resize-line')\n            return this.onSkew(e);\n        const { element } = this;\n        let origin, rotation;\n        if (e instanceof RotateEvent) {\n            if (rotateable === 'rotate')\n                e.stop(), rotation = e.rotation, origin = element.getBoxPoint(e);\n            else\n                return;\n        }\n        else {\n            const last = { x: e.x - e.moveX, y: e.y - e.moveY };\n            const data = EditDataHelper.getRotateData(element.boxBounds, direction, e.getBoxPoint(element), element.getBoxPoint(last), e.shiftKey ? null : (element.around || element.origin || around || 'center'));\n            rotation = data.rotation;\n            origin = data.origin;\n        }\n        rotation = MathHelper.getGapRotation(rotation, rotateGap, element.rotation);\n        if (!rotation)\n            return;\n        if (element.scaleX * element.scaleY < 0)\n            rotation = -rotation;\n        this.rotateOf(origin, MathHelper.float(rotation, 2));\n    }\n    onSkew(e) {\n        const { element } = this;\n        const { around } = this.mergeConfig;\n        const { origin, skewX, skewY } = EditDataHelper.getSkewData(element.boxBounds, e.current.direction, e.getInnerMove(element), EditDataHelper.getAround(around, e.altKey));\n        if (!skewX && !skewY)\n            return;\n        this.skewOf(origin, skewX, skewY);\n    }\n    move(x, y = 0) {\n        if (!this.checkTransform('moveable'))\n            return;\n        const { element } = this;\n        const world = element.getWorldPointByLocal(typeof x === 'object' ? Object.assign({}, x) : { x, y }, null, true);\n        if (this.multiple)\n            element.safeChange(() => element.move(x, y));\n        const event = new EditorMoveEvent(EditorMoveEvent.MOVE, { target: element, editor: this, moveX: world.x, moveY: world.y });\n        this.editTool.onMove(event);\n        this.emitEvent(event);\n    }\n    scaleWithDrag(data) {\n        if (!this.checkTransform('resizeable'))\n            return;\n        const { element } = this;\n        const event = new EditorScaleEvent(EditorScaleEvent.SCALE, Object.assign(Object.assign({}, data), { target: element, editor: this, worldOrigin: element.getWorldPoint(data.origin) }));\n        this.editTool.onScaleWithDrag(event);\n        this.emitEvent(event);\n    }\n    scaleOf(origin, scaleX, scaleY = scaleX, _resize) {\n        if (!this.checkTransform('resizeable'))\n            return;\n        const { element } = this;\n        const worldOrigin = this.getWorldOrigin(origin);\n        const transform = this.multiple && this.getChangedTransform(() => element.safeChange(() => element.scaleOf(origin, scaleX, scaleY)));\n        const event = new EditorScaleEvent(EditorScaleEvent.SCALE, { target: element, editor: this, worldOrigin, scaleX, scaleY, transform });\n        this.editTool.onScale(event);\n        this.emitEvent(event);\n    }\n    flip(axis) {\n        if (!this.checkTransform('resizeable'))\n            return;\n        const { element } = this;\n        const worldOrigin = this.getWorldOrigin('center');\n        const transform = this.multiple ? this.getChangedTransform(() => element.safeChange(() => element.flip(axis))) : new Matrix(LeafHelper.getFlipTransform(element, axis));\n        const event = new EditorScaleEvent(EditorScaleEvent.SCALE, { target: element, editor: this, worldOrigin, scaleX: axis === 'x' ? -1 : 1, scaleY: axis === 'y' ? -1 : 1, transform });\n        this.editTool.onScale(event);\n        this.emitEvent(event);\n    }\n    rotateOf(origin, rotation) {\n        if (!this.checkTransform('rotateable'))\n            return;\n        const { element } = this;\n        const worldOrigin = this.getWorldOrigin(origin);\n        const transform = this.multiple && this.getChangedTransform(() => element.safeChange(() => element.rotateOf(origin, rotation)));\n        const event = new EditorRotateEvent(EditorRotateEvent.ROTATE, { target: element, editor: this, worldOrigin, rotation, transform });\n        this.editTool.onRotate(event);\n        this.emitEvent(event);\n    }\n    skewOf(origin, skewX, skewY = 0, _resize) {\n        if (!this.checkTransform('skewable'))\n            return;\n        const { element } = this;\n        const worldOrigin = this.getWorldOrigin(origin);\n        const transform = this.multiple && this.getChangedTransform(() => element.safeChange(() => element.skewOf(origin, skewX, skewY)));\n        const event = new EditorSkewEvent(EditorSkewEvent.SKEW, { target: element, editor: this, worldOrigin, skewX, skewY, transform });\n        this.editTool.onSkew(event);\n        this.emitEvent(event);\n    }\n    checkTransform(type) { return this.element && !this.element.locked && this.mergeConfig[type]; }\n    getWorldOrigin(origin) {\n        return this.element.getWorldPoint(LeafHelper.getInnerOrigin(this.element, origin));\n    }\n    getChangedTransform(func) {\n        const { element } = this;\n        if (this.multiple && !element.canChange)\n            return element.changedTransform;\n        const oldMatrix = new Matrix(element.worldTransform);\n        func();\n        return new Matrix(element.worldTransform).divide(oldMatrix);\n    }\n    group(userGroup) {\n        if (this.multiple) {\n            this.target = EditorHelper.group(this.list, this.element, userGroup);\n            this.emitGroupEvent(EditorGroupEvent.GROUP, this.target);\n        }\n        return this.target;\n    }\n    ungroup() {\n        const { list } = this;\n        if (list.length) {\n            list.forEach(item => item.isBranch && this.emitGroupEvent(EditorGroupEvent.BEFORE_UNGROUP, item));\n            this.target = EditorHelper.ungroup(list);\n            list.forEach(item => item.isBranch && this.emitGroupEvent(EditorGroupEvent.UNGROUP, item));\n        }\n        return this.list;\n    }\n    openGroup(group) {\n        this.openedGroupList.add(group);\n        group.hitChildren = true;\n        this.emitGroupEvent(EditorGroupEvent.OPEN, group);\n    }\n    closeGroup(group) {\n        this.openedGroupList.remove(group);\n        group.hitChildren = false;\n        this.emitGroupEvent(EditorGroupEvent.CLOSE, group);\n    }\n    checkOpenedGroups() {\n        const opened = this.openedGroupList;\n        if (opened.length) {\n            let { list } = opened;\n            if (this.editing)\n                list = [], opened.forEach(item => this.list.every(leaf => !LeafHelper.hasParent(leaf, item)) && list.push(item));\n            list.forEach(item => this.closeGroup(item));\n        }\n        if (this.editing && !this.selector.dragging)\n            this.checkDeepSelect();\n    }\n    checkDeepSelect() {\n        let parent, { list } = this;\n        for (let i = 0; i < list.length; i++) {\n            parent = list[i].parent;\n            while (parent && !parent.hitChildren) {\n                this.openGroup(parent);\n                parent = parent.parent;\n            }\n        }\n    }\n    emitGroupEvent(type, group) {\n        const event = new EditorGroupEvent(type, { editTarget: group });\n        this.emitEvent(event);\n        group.emitEvent(event);\n    }\n    openInnerEditor(target, select) {\n        if (target && select)\n            this.target = target;\n        if (this.single) {\n            const editTarget = target || this.element;\n            const tag = editTarget.editInner;\n            if (tag && EditToolCreator.list[tag]) {\n                this.editTool.unload();\n                this.innerEditing = true;\n                this.innerEditor = this.editToolList[tag] || EditToolCreator.get(tag, this);\n                this.innerEditor.editTarget = editTarget;\n                this.emitInnerEvent(InnerEditorEvent.BEFORE_OPEN);\n                this.innerEditor.load();\n                this.emitInnerEvent(InnerEditorEvent.OPEN);\n            }\n        }\n    }\n    closeInnerEditor() {\n        if (this.innerEditing) {\n            this.innerEditing = false;\n            this.emitInnerEvent(InnerEditorEvent.BEFORE_CLOSE);\n            this.innerEditor.unload();\n            this.emitInnerEvent(InnerEditorEvent.CLOSE);\n            this.editTool.load();\n            this.innerEditor = null;\n        }\n    }\n    emitInnerEvent(type) {\n        const { innerEditor } = this;\n        const { editTarget } = innerEditor;\n        const event = new InnerEditorEvent(type, { editTarget, innerEditor });\n        this.emitEvent(event);\n        editTarget.emitEvent(event);\n    }\n    lock() {\n        this.list.forEach(leaf => leaf.locked = true);\n        this.update();\n    }\n    unlock() {\n        this.list.forEach(leaf => leaf.locked = false);\n        this.update();\n    }\n    toTop() {\n        if (this.list.length) {\n            EditorHelper.toTop(this.list);\n            this.leafList.update();\n        }\n    }\n    toBottom() {\n        if (this.list.length) {\n            EditorHelper.toBottom(this.list);\n            this.leafList.update();\n        }\n    }\n    listenTargetEvents() {\n        if (!this.targetEventIds.length) {\n            const { app, leafer } = this;\n            this.targetEventIds = [\n                leafer.on_(RenderEvent.START, this.update, this),\n                app.on_(RenderEvent.CHILD_START, this.forceRender, this),\n                app.on_(MoveEvent.BEFORE_MOVE, this.onMove, this, true),\n                app.on_(ZoomEvent.BEFORE_ZOOM, this.onScale, this, true),\n                app.on_(RotateEvent.BEFORE_ROTATE, this.onRotate, this, true),\n                app.on_([KeyEvent.HOLD, KeyEvent.UP], (e) => { updateCursor(this, e); }),\n                app.on_(KeyEvent.DOWN, this.editBox.onArrow, this.editBox)\n            ];\n        }\n    }\n    removeTargetEvents() {\n        const { targetEventIds } = this;\n        if (targetEventIds.length) {\n            this.off_(targetEventIds);\n            targetEventIds.length = 0;\n        }\n    }\n    destroy() {\n        if (!this.destroyed) {\n            this.target = this.hoverTarget = null;\n            Object.values(this.editToolList).forEach(item => item.destroy());\n            this.simulateTarget.destroy();\n            this.editToolList = {};\n            this.simulateTarget = this.editTool = this.innerEditor = null;\n            super.destroy();\n        }\n    }\n}\n__decorate([\n    targetAttr(onHover)\n], Editor.prototype, \"hoverTarget\", void 0);\n__decorate([\n    targetAttr(onTarget)\n], Editor.prototype, \"target\", void 0);\n\nclass InnerEditor {\n    static registerInnerEditor() {\n        EditToolCreator.register(this);\n    }\n    get tag() { return 'InnerEditor'; }\n    get editBox() { return this.editor.editBox; }\n    constructor(editor) {\n        this.editor = editor;\n        this.create();\n    }\n    onCreate() { }\n    create() {\n        this.view = new Group();\n        this.onCreate();\n    }\n    onLoad() { }\n    load() {\n        const { editor } = this;\n        if (editor) {\n            if (editor.app)\n                editor.selector.hittable = editor.app.tree.hitChildren = false;\n            this.onLoad();\n        }\n    }\n    onUpdate() { }\n    update() { this.onUpdate(); }\n    onUnload() { }\n    unload() {\n        const { editor } = this;\n        if (editor) {\n            if (editor.app)\n                editor.selector.hittable = editor.app.tree.hitChildren = true;\n            this.onUnload();\n        }\n    }\n    onDestroy() { }\n    destroy() {\n        this.onDestroy();\n        if (this.editor) {\n            if (this.view)\n                this.view.destroy();\n            if (this.eventIds)\n                this.editor.off_(this.eventIds);\n            this.editor = this.view = this.eventIds = null;\n        }\n    }\n}\n\nlet EditTool = class EditTool extends InnerEditor {\n    static registerEditTool() {\n        EditToolCreator.register(this);\n    }\n    get tag() { return 'EditTool'; }\n    onMove(e) {\n        const { moveX, moveY, editor } = e;\n        const { app, list } = editor;\n        app.lockLayout();\n        list.forEach(target => {\n            target.moveWorld(moveX, moveY);\n        });\n        app.unlockLayout();\n    }\n    onScale(e) {\n        const { scaleX, scaleY, transform, worldOrigin, editor } = e;\n        const { app, list } = editor;\n        app.lockLayout();\n        list.forEach(target => {\n            const resize = editor.getEditSize(target) !== 'scale';\n            if (transform) {\n                target.transformWorld(transform, resize);\n            }\n            else {\n                target.scaleOfWorld(worldOrigin, scaleX, scaleY, resize);\n            }\n        });\n        app.unlockLayout();\n    }\n    onRotate(e) {\n        const { rotation, transform, worldOrigin, editor } = e;\n        const { app, list } = editor;\n        app.lockLayout();\n        list.forEach(target => {\n            const resize = editor.getEditSize(target) !== 'scale';\n            if (transform) {\n                target.transformWorld(transform, resize);\n            }\n            else {\n                target.rotateOfWorld(worldOrigin, rotation);\n            }\n        });\n        app.unlockLayout();\n    }\n    onSkew(e) {\n        const { skewX, skewY, transform, worldOrigin, editor } = e;\n        const { app, list } = editor;\n        app.lockLayout();\n        list.forEach(target => {\n            const resize = editor.getEditSize(target) !== 'scale';\n            if (transform) {\n                target.transformWorld(transform, resize);\n            }\n            else {\n                target.skewOfWorld(worldOrigin, skewX, skewY, resize);\n            }\n        });\n        app.unlockLayout();\n    }\n    load() {\n        this.editBox.view.visible = true;\n        this.onLoad();\n    }\n    update() {\n        const { editor, editBox } = this;\n        const { x, y, scaleX, scaleY, rotation, skewX, skewY, width, height } = editor.element.getLayoutBounds('box', editor, true);\n        editBox.set({ x, y, scaleX, scaleY, rotation, skewX, skewY });\n        editBox.update({ x: 0, y: 0, width, height });\n        this.onUpdate();\n    }\n    unload() {\n        this.editBox.view.visible = false;\n        this.onUnload();\n    }\n};\nEditTool = __decorate([\n    registerEditTool()\n], EditTool);\n\nconst { left, right } = Direction9;\nconst { move, copy, toNumberPoints } = PointHelper;\nlet LineEditTool = class LineEditTool extends EditTool {\n    constructor() {\n        super(...arguments);\n        this.scaleOfEvent = true;\n    }\n    get tag() { return 'LineEditTool'; }\n    onScaleWithDrag(e) {\n        const { drag, direction, lockRatio, around } = e;\n        const line = e.target;\n        const isDragFrom = direction === left;\n        if (line.pathInputed) {\n            const { path } = line.__;\n            const { from, to } = this.getFromToByPath(path);\n            this.dragPoint(from, to, isDragFrom, around, this.getInnerMove(line, drag, lockRatio));\n            path[1] = from.x, path[2] = from.y;\n            path[4] = to.x, path[5] = to.y;\n            line.path = path;\n        }\n        else if (line.points) {\n            const { points } = line;\n            const { from, to } = this.getFromToByPoints(points);\n            this.dragPoint(from, to, isDragFrom, around, this.getInnerMove(line, drag, lockRatio));\n            points[0] = from.x, points[1] = from.y;\n            points[2] = to.x, points[3] = to.y;\n            line.points = points;\n        }\n        else {\n            const from = getPointData();\n            const { toPoint } = line;\n            line.rotation = 0;\n            this.dragPoint(from, toPoint, isDragFrom, around, this.getInnerMove(line, drag, lockRatio));\n            line.getLocalPointByInner(from, null, null, true);\n            line.getLocalPointByInner(toPoint, null, null, true);\n            line.x = from.x;\n            line.y = from.y;\n            line.getInnerPointByLocal(toPoint, null, null, true);\n            line.toPoint = toPoint;\n        }\n    }\n    getInnerMove(ui, event, lockRatio) {\n        const movePoint = event.getInnerMove(ui);\n        if (lockRatio)\n            Math.abs(movePoint.x) > Math.abs(movePoint.y) ? movePoint.y = 0 : movePoint.x = 0;\n        return movePoint;\n    }\n    getFromToByPath(path) {\n        return {\n            from: { x: path[1], y: path[2] },\n            to: { x: path[4], y: path[5] }\n        };\n    }\n    getFromToByPoints(originPoints) {\n        const points = toNumberPoints(originPoints);\n        return {\n            from: { x: points[0], y: points[1] },\n            to: { x: points[2], y: points[3] }\n        };\n    }\n    dragPoint(fromPoint, toPoint, isDragFrom, around, movePoint) {\n        const { x, y } = movePoint;\n        if (isDragFrom) {\n            move(fromPoint, x, y);\n            if (around)\n                move(toPoint, -x, -y);\n        }\n        else {\n            if (around)\n                move(fromPoint, -x, -y);\n            move(toPoint, x, y);\n        }\n    }\n    onSkew(_e) {\n    }\n    onUpdate() {\n        const { editBox } = this, { rotatePoints, resizeLines, resizePoints, rect } = editBox;\n        const line = this.editor.element;\n        let fromTo, leftOrRight;\n        if (line.pathInputed)\n            fromTo = this.getFromToByPath(line.__.path);\n        else if (line.points)\n            fromTo = this.getFromToByPoints(line.__.points);\n        if (fromTo) {\n            const { from, to } = fromTo;\n            line.innerToWorld(from, from, false, editBox);\n            line.innerToWorld(to, to, false, editBox);\n            rect.pen.clearPath().moveTo(from.x, from.y).lineTo(to.x, to.y);\n            copy(resizePoints[7], from);\n            copy(rotatePoints[7], from);\n            copy(resizePoints[3], to);\n            copy(rotatePoints[3], to);\n        }\n        for (let i = 0; i < 8; i++) {\n            if (i < 4)\n                resizeLines[i].visible = false;\n            leftOrRight = i === left || i === right;\n            resizePoints[i].visible = leftOrRight;\n            rotatePoints[i].visible = fromTo ? false : leftOrRight;\n        }\n    }\n};\nLineEditTool = __decorate([\n    registerEditTool()\n], LineEditTool);\n\nCreator.editor = function (options) { return new Editor(options); };\ndataType(false)(Box.prototype, 'textBox');\ndefineKey(UI.prototype, 'editOuter', {\n    get() { return this.__.__isLinePath ? 'LineEditTool' : 'EditTool'; }\n});\ndefineKey(UI.prototype, 'editInner', {\n    get() { return 'PathEditor'; }\n});\ndefineKey(Group.prototype, 'editInner', {\n    get() { return ''; }\n});\ndefineKey(Text.prototype, 'editInner', {\n    get() { return 'TextEditor'; }\n});\nUI.setEditConfig = function (config) {\n    defineKey(this.prototype, 'editConfig', {\n        get() { return typeof config === 'function' ? config(this) : config; }\n    });\n};\nUI.setEditOuter = function (toolName) {\n    defineKey(this.prototype, 'editOuter', {\n        get() { return typeof toolName === 'string' ? toolName : toolName(this); }\n    });\n};\nUI.setEditInner = function (editorName) {\n    defineKey(this.prototype, 'editInner', {\n        get() { return typeof editorName === 'string' ? editorName : editorName(this); }\n    });\n};\n\nexport { EditBox, EditDataHelper, EditPoint, EditSelect, EditSelectHelper, EditTool, EditToolCreator, Editor, EditorEvent, EditorGroupEvent, EditorHelper, EditorMoveEvent, EditorRotateEvent, EditorScaleEvent, EditorSkewEvent, InnerEditor, InnerEditorEvent, LineEditTool, PathScaler, SelectArea, Stroker, registerEditTool, registerInnerEditor, scaleResize, scaleResizeFontSize, scaleResizeGroup, scaleResizePath, scaleResizePoints };\n"],
  "mappings": "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",
  "names": ["leaf", "scale", "list", "leaf", "bounds", "config", "origin", "scale", "move", "EditTool", "LineEditTool", "toPoint"]
}
